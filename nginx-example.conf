# Nginx Configuration Example for Expense Tracker API
# Place this in /etc/nginx/sites-available/ and symlink to /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name your-domain.com;  # Replace with your domain

    # Redirect HTTP to HTTPS (optional but recommended)
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Replace with your domain

    # SSL Configuration (replace with your SSL certificate paths)
    ssl_certificate /path/to/your/fullchain.pem;
    ssl_certificate_key /path/to/your/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Maximum upload size (for voice files and receipts)
    client_max_body_size 25M;

    # Proxy to Node.js backend
    location / {
        # Pass the real client IP address to the backend
        # IMPORTANT: These headers are required for rate limiting to work correctly
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Proxy to backend
        proxy_pass http://localhost:8000;  # Replace with your backend port

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
    }

    # Static files (if you host frontend from same nginx)
    # location /static/ {
    #     alias /path/to/your/static/files/;
    #     expires 1y;
    #     add_header Cache-Control "public, immutable";
    # }

    # Access and Error logs
    access_log /var/log/nginx/expense-tracker-access.log;
    error_log /var/log/nginx/expense-tracker-error.log;
}

# Rate Limiting at Nginx Level (optional, backend already has rate limiting)
# Uncomment if you want additional protection at nginx level
#
# http {
#     # Define rate limit zone (10MB can store ~160,000 IP addresses)
#     limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
#
#     server {
#         # ... other config ...
#
#         location /api/ {
#             # Apply rate limit: burst allows temporary spikes
#             limit_req zone=api_limit burst=20 nodelay;
#
#             # ... proxy settings ...
#         }
#     }
# }
